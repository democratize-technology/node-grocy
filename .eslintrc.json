{
  "root": true,
  "extends": ["eslint:recommended", "prettier"],
  "plugins": ["functional", "jsdoc"],
  "parser": "espree",
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module"
  },
  "env": {
    "node": true,
    "es2022": true
  },
  "rules": {
    "functional/immutable-data": "error",
    "functional/no-let": "error",
    "functional/prefer-readonly-type": "warn",
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "prefer-const": "error",
    "no-var": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"],
    "jsdoc/require-jsdoc": [
      "warn",
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": true,
          "ClassDeclaration": true
        }
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "CallExpression[callee.property.name='push']",
        "message": "Array.push mutates. Use spread operator [...arr, item] instead."
      },
      {
        "selector": "CallExpression[callee.property.name='pop']",
        "message": "Array.pop mutates. Use arr.slice(0, -1) instead."
      },
      {
        "selector": "CallExpression[callee.property.name='shift']",
        "message": "Array.shift mutates. Use arr.slice(1) instead."
      },
      {
        "selector": "CallExpression[callee.property.name='unshift']",
        "message": "Array.unshift mutates. Use [item, ...arr] instead."
      },
      {
        "selector": "CallExpression[callee.property.name='splice']",
        "message": "Array.splice mutates. Use filter() or slice() instead."
      },
      {
        "selector": "CallExpression[callee.property.name='sort']",
        "message": "Array.sort mutates. Use [...arr].sort() instead."
      },
      {
        "selector": "CallExpression[callee.property.name='reverse']",
        "message": "Array.reverse mutates. Use [...arr].reverse() instead."
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.test.ts", "*.test.mjs"],
      "env": {
        "jest": true
      },
      "rules": {
        "functional/no-let": "off",
        "functional/immutable-data": "off",
        "jsdoc/require-jsdoc": "off"
      }
    }
  ]
}
