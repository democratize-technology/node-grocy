name: TypeScript Migration Progress

on:
  push:
    branches: [ feature/v1-refactoring ]
  pull_request:
    branches: [ feature/v1-refactoring ]
    paths: 
      - '**/*.js'
      - '**/*.mjs'
      - '**/*.ts'
      - '**/*.tsx'
      - 'src/**/*'
      - 'package.json'
      - 'tsconfig.json'

permissions:
  contents: read
  pull-requests: write

jobs:
  typescript-migration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for migration tracking

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        # Install TypeScript tooling if not present
        npm list typescript || npm install --no-save typescript@latest
        npm list @types/node || npm install --no-save @types/node@latest

    - name: Calculate Migration Progress
      run: |
        echo "📊 Calculating TypeScript migration progress..."
        
        # Count different file types
        JS_FILES=$(find . -name "*.js" -not -path "./node_modules/*" | wc -l)
        MJS_FILES=$(find . -name "*.mjs" -not -path "./node_modules/*" | wc -l)
        TS_FILES=$(find . -name "*.ts" -not -path "./node_modules/*" | wc -l)
        TSX_FILES=$(find . -name "*.tsx" -not -path "./node_modules/*" | wc -l)
        
        # Calculate totals
        LEGACY_FILES=$((JS_FILES + MJS_FILES))
        MODERN_FILES=$((TS_FILES + TSX_FILES))
        TOTAL_FILES=$((LEGACY_FILES + MODERN_FILES))
        
        # Calculate percentage
        if [ $TOTAL_FILES -gt 0 ]; then
          MIGRATION_PERCENTAGE=$(echo "scale=2; $MODERN_FILES * 100 / $TOTAL_FILES" | bc)
        else
          MIGRATION_PERCENTAGE=0
        fi
        
        echo "LEGACY_FILES=$LEGACY_FILES" >> $GITHUB_ENV
        echo "MODERN_FILES=$MODERN_FILES" >> $GITHUB_ENV
        echo "TOTAL_FILES=$TOTAL_FILES" >> $GITHUB_ENV
        echo "MIGRATION_PERCENTAGE=$MIGRATION_PERCENTAGE" >> $GITHUB_ENV
        
        echo "JavaScript/MJS files: $LEGACY_FILES"
        echo "TypeScript files: $MODERN_FILES"
        echo "Migration progress: $MIGRATION_PERCENTAGE%"

    - name: Analyze Code Complexity
      run: |
        echo "🔍 Analyzing code complexity for migration planning..."
        
        # Count lines of code in legacy files
        if [ ${{ env.LEGACY_FILES }} -gt 0 ]; then
          LEGACY_LOC=$(find . -name "*.js" -o -name "*.mjs" | grep -v node_modules | xargs wc -l | tail -1 | awk '{print $1}')
        else
          LEGACY_LOC=0
        fi
        
        # Count lines of code in TypeScript files
        if [ ${{ env.MODERN_FILES }} -gt 0 ]; then
          MODERN_LOC=$(find . -name "*.ts" -o -name "*.tsx" | grep -v node_modules | xargs wc -l | tail -1 | awk '{print $1}')
        else
          MODERN_LOC=0
        fi
        
        echo "LEGACY_LOC=$LEGACY_LOC" >> $GITHUB_ENV
        echo "MODERN_LOC=$MODERN_LOC" >> $GITHUB_ENV
        
        echo "Legacy code lines: $LEGACY_LOC"
        echo "TypeScript code lines: $MODERN_LOC"

    - name: Check for TypeScript Configuration
      run: |
        echo "⚙️  Checking TypeScript configuration..."
        
        # Check if tsconfig.json exists
        if [ -f "tsconfig.json" ]; then
          echo "✅ tsconfig.json found"
          echo "TSCONFIG_EXISTS=true" >> $GITHUB_ENV
          
          # Validate TypeScript configuration
          npx tsc --noEmit --skipLibCheck 2>&1 || echo "⚠️  TypeScript compilation has issues"
        else
          echo "❌ tsconfig.json missing"
          echo "TSCONFIG_EXISTS=false" >> $GITHUB_ENV
          
          echo "Creating recommended tsconfig.json for node-grocy v1.0.0..."
          cat > tsconfig.json << 'EOF'
        {
          "compilerOptions": {
            "target": "ES2022",
            "module": "ESNext",
            "moduleResolution": "node",
            "lib": ["ES2022"],
            "outDir": "./dist",
            "rootDir": "./src",
            "strict": true,
            "noImplicitAny": true,
            "strictNullChecks": true,
            "strictFunctionTypes": true,
            "noImplicitReturns": true,
            "noFallthroughCasesInSwitch": true,
            "noImplicitOverride": true,
            "exactOptionalPropertyTypes": true,
            "noPropertyAccessFromIndexSignature": true,
            "noUncheckedIndexedAccess": true,
            "allowUnusedLabels": false,
            "allowUnreachableCode": false,
            "esModuleInterop": true,
            "forceConsistentCasingInFileNames": true,
            "skipLibCheck": true,
            "declaration": true,
            "declarationMap": true,
            "sourceMap": true,
            "removeComments": false,
            "importHelpers": true,
            "resolveJsonModule": true
          },
          "include": [
            "src/**/*",
            "types/**/*"
          ],
          "exclude": [
            "node_modules",
            "dist",
            "coverage",
            "**/*.test.*"
          ]
        }
        EOF
          echo "📝 Created recommended tsconfig.json"
        fi

    - name: Identify Migration Candidates
      run: |
        echo "🎯 Identifying high-priority migration candidates..."
        
        # Find large JavaScript files (>500 lines)
        echo "Large files requiring migration:"
        find . -name "*.js" -o -name "*.mjs" | grep -v node_modules | while read file; do
          lines=$(wc -l < "$file")
          if [ $lines -gt 500 ]; then
            echo "  📄 $file ($lines lines)"
          fi
        done > large-files.txt
        
        if [ -s large-files.txt ]; then
          echo "Large migration candidates found:"
          cat large-files.txt
        else
          echo "✅ No large legacy files found"
        fi

    - name: Generate Migration Report
      run: |
        echo "📋 Generating comprehensive migration report..."
        
        cat > migration-report.md << EOF
        # TypeScript Migration Progress Report
        
        Generated on: $(date)
        Branch: ${{ github.ref_name }}
        
        ## 📊 Migration Statistics
        
        | Metric | Value |
        |--------|-------|
        | **Legacy Files** | ${{ env.LEGACY_FILES }} (.js/.mjs) |
        | **TypeScript Files** | ${{ env.MODERN_FILES }} (.ts/.tsx) |
        | **Migration Progress** | ${{ env.MIGRATION_PERCENTAGE }}% |
        | **Legacy LOC** | ${{ env.LEGACY_LOC }} |
        | **TypeScript LOC** | ${{ env.MODERN_LOC }} |
        | **TSConfig** | ${{ env.TSCONFIG_EXISTS == 'true' && '✅ Configured' || '❌ Missing' }} |
        
        ## 🎯 Migration Status
        
        EOF
        
        # Add status based on progress
        if (( $(echo "${{ env.MIGRATION_PERCENTAGE }} >= 90" | bc -l) )); then
          echo "🟢 **Status**: Near completion - excellent progress!" >> migration-report.md
        elif (( $(echo "${{ env.MIGRATION_PERCENTAGE }} >= 50" | bc -l) )); then
          echo "🟡 **Status**: Good progress - keep going!" >> migration-report.md
        elif (( $(echo "${{ env.MIGRATION_PERCENTAGE }} >= 25" | bc -l) )); then
          echo "🟠 **Status**: Getting started - momentum building!" >> migration-report.md
        else
          echo "🔴 **Status**: Early stage - major work ahead!" >> migration-report.md
        fi
        
        echo "" >> migration-report.md
        echo "## 📈 Progress Visualization" >> migration-report.md
        echo "" >> migration-report.md
        echo "\`\`\`" >> migration-report.md
        echo "TypeScript Migration: [${{ env.MIGRATION_PERCENTAGE }}%]" >> migration-report.md
        echo "████████████████████████████████████████████████████████████████████████████████" >> migration-report.md
        
        # Create progress bar
        FILLED=$(echo "scale=0; ${{ env.MIGRATION_PERCENTAGE }} * 80 / 100" | bc)
        EMPTY=$((80 - FILLED))
        printf "█%.0s" $(seq 1 $FILLED) >> migration-report.md
        printf "░%.0s" $(seq 1 $EMPTY) >> migration-report.md
        echo "" >> migration-report.md
        echo "\`\`\`" >> migration-report.md
        
        echo "" >> migration-report.md
        echo "## 🚀 Next Steps" >> migration-report.md
        echo "" >> migration-report.md
        
        if [ ${{ env.TSCONFIG_EXISTS }} == "false" ]; then
          echo "1. ✅ TypeScript configuration created" >> migration-report.md
        fi
        
        if [ -s large-files.txt ]; then
          echo "2. 📝 Prioritize migration of large files:" >> migration-report.md
          cat large-files.txt >> migration-report.md
        fi
        
        echo "3. 🔧 Add type definitions for external APIs" >> migration-report.md
        echo "4. 🧪 Update tests to TypeScript" >> migration-report.md
        echo "5. 📦 Configure build pipeline for TypeScript" >> migration-report.md
        
        echo "Migration report generated!"

    - name: Upload Migration Report
      uses: actions/upload-artifact@v4
      with:
        name: typescript-migration-report
        path: |
          migration-report.md
          large-files.txt
          tsconfig.json
        retention-days: 30

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let comment = `## 📊 TypeScript Migration Progress\n\n`;
          comment += `**Progress**: ${{ env.MIGRATION_PERCENTAGE }}% complete\n`;
          comment += `**Legacy Files**: ${{ env.LEGACY_FILES }} (.js/.mjs)\n`;
          comment += `**TypeScript Files**: ${{ env.MODERN_FILES }} (.ts/.tsx)\n\n`;
          
          // Add progress bar
          const progress = parseFloat('${{ env.MIGRATION_PERCENTAGE }}');
          const filled = Math.floor(progress / 2.5); // 40 chars max
          const empty = 40 - filled;
          const progressBar = '█'.repeat(filled) + '░'.repeat(empty);
          comment += `\`${progressBar}\` ${progress}%\n\n`;
          
          if (progress >= 90) {
            comment += `🟢 **Excellent!** Migration is nearly complete!\n\n`;
          } else if (progress >= 50) {
            comment += `🟡 **Good progress!** Keep up the momentum!\n\n`;
          } else if (progress >= 25) {
            comment += `🟠 **Getting started!** Making good progress!\n\n`;
          } else {
            comment += `🔴 **Early stage** - Major TypeScript migration work ahead!\n\n`;
          }
          
          comment += `📈 [View detailed migration report](${context.payload.pull_request.html_url}/checks)\n\n`;
          comment += `---\n`;
          comment += `*This comment was automatically generated by the TypeScript Migration workflow*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Cache Migration Data
      uses: actions/cache@v4
      with:
        path: |
          migration-report.md
          tsconfig.json
        key: migration-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          migration-${{ runner.os }}-
